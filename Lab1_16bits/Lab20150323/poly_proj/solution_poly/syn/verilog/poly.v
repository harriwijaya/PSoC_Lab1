// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.4
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="poly,hls_ip_2013_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7v585tffg1761-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.670000,HLS_SYN_LAT=0,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=0}" *)

module poly (
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        x,
        y,
        y_ap_vld
);

input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] x;
output  [15:0] y;
output   y_ap_vld;

reg y_ap_vld;
wire   [15:0] tmp_3_fu_32_p0;
wire   [15:0] tmp_3_fu_32_p2;
wire   [15:0] tmp_1_fu_38_p1;
wire   [15:0] tmp_1_fu_38_p2;
wire   [15:0] tmp1_fu_50_p0;
wire   [15:0] tmp1_fu_50_p1;
wire   [15:0] tmp1_fu_50_p2;
parameter    ap_const_logic_1 = 1'b1;
parameter    ap_true = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_const_lv16_2 = 16'b10;
parameter    ap_const_lv16_1 = 16'b1;




/// y_ap_vld assign process. ///
always @ (ap_start)
begin
    if (~(ap_start == ap_const_logic_0)) begin
        y_ap_vld = ap_const_logic_1;
    end else begin
        y_ap_vld = ap_const_logic_0;
    end
end
assign ap_done = ap_start;
assign ap_idle = ap_const_logic_1;
assign ap_ready = ap_start;
assign tmp1_fu_50_p0 = (tmp_1_fu_38_p2 + ap_const_lv16_2);
assign tmp1_fu_50_p1 = x;
assign tmp1_fu_50_p2 = ($signed(tmp1_fu_50_p0) * $signed(tmp1_fu_50_p1));
assign tmp_1_fu_38_p1 = x;
assign tmp_1_fu_38_p2 = (tmp_3_fu_32_p2 - tmp_1_fu_38_p1);
assign tmp_3_fu_32_p0 = x;
assign tmp_3_fu_32_p2 = tmp_3_fu_32_p0 << ap_const_lv16_2;
assign y = (tmp1_fu_50_p2 + ap_const_lv16_1);


endmodule //poly

