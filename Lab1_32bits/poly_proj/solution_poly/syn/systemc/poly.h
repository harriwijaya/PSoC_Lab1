// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.4
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _poly_HH_
#define _poly_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "poly_mul_32s_32s_32_3.h"

namespace ap_rtl {

struct poly : public sc_module {
    // Port declarations 9
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > x;
    sc_out< sc_lv<32> > y;
    sc_out< sc_logic > y_ap_vld;


    // Module declarations
    poly(sc_module_name name);
    SC_HAS_PROCESS(poly);

    ~poly();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    poly_mul_32s_32s_32_3<1,3,32,32,32>* poly_mul_32s_32s_32_3_U1;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_lv<32> > tmp_fu_44_p2;
    sc_signal< sc_lv<32> > tmp_reg_65;
    sc_signal< sc_lv<32> > grp_fu_50_p2;
    sc_signal< sc_lv<32> > tmp1_reg_70;
    sc_signal< sc_lv<32> > tmp_3_fu_32_p0;
    sc_signal< sc_lv<32> > tmp_3_fu_32_p2;
    sc_signal< sc_lv<32> > tmp_1_fu_38_p1;
    sc_signal< sc_lv<32> > tmp_1_fu_38_p2;
    sc_signal< sc_lv<32> > grp_fu_50_p0;
    sc_signal< sc_lv<32> > grp_fu_50_p1;
    sc_signal< sc_logic > grp_fu_50_ce;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_st1_fsm_0;
    static const sc_lv<3> ap_ST_st2_fsm_1;
    static const sc_lv<3> ap_ST_st3_fsm_2;
    static const sc_lv<3> ap_ST_st4_fsm_3;
    static const sc_lv<3> ap_ST_st5_fsm_4;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_grp_fu_50_ce();
    void thread_grp_fu_50_p0();
    void thread_grp_fu_50_p1();
    void thread_tmp_1_fu_38_p1();
    void thread_tmp_1_fu_38_p2();
    void thread_tmp_3_fu_32_p0();
    void thread_tmp_3_fu_32_p2();
    void thread_tmp_fu_44_p2();
    void thread_y();
    void thread_y_ap_vld();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
